# SOME DESCRIPTIVE TITLE.
# Copyright (C) This documentation is licensed under CC0 1.0.
# This file is distributed under the same license as the MusicBrainz Picard
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: MusicBrainz Picard v2.3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-16 18:38-0600\n"
"PO-Revision-Date: 2020-10-07 15:43-0600\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"Last-Translator: Bob Swift <bswift@rsds.ca>\n"
"Language-Team: \n"
"Language: fr\n"
"X-Generator: Poedit 2.4.1\n"

#: ../../extending/plugins.rst:7
msgid "Plugins"
msgstr "Plugins"

#: ../../extending/plugins.rst:12
msgid ""
"Plugins are written in Python, and are registered to the appropriate "
"hooks.  Each plugin has its own version identifier, but also lists the "
"plugin API versions that it supports. When loading a plugin, Picard "
"first compares its list of API versions to the plugin’s supported "
"versions to ensure that the plugin will operate correctly.  The Picard "
"API versions indicate the version of the program in which the plugin API "
"was last updated and any plugin APIs with which it is backwards "
"compatible."
msgstr ""
"Les plugins sont écrits en Python et sont enregistrés dans les hooks "
"appropriés. Chaque plugin a son propre identifiant de version, mais "
"répertorie également les versions d'API de plugin qu'il prend en charge. "
"Lors du chargement d'un plugin, Picard compare d'abord sa liste de "
"versions d'API aux versions prises en charge par le plugin pour "
"s'assurer que le plugin fonctionnera correctement. Les versions de l'API "
"Picard indiquent la version du programme dans laquelle l'API du plugin a "
"été mise à jour pour la dernière fois et toutes les API du plugin avec "
"lesquelles elle est rétrocompatible."

#: ../../extending/plugins.rst:19
msgid ""
"Hooks are connections to the various objects in Picard that call a "
"specific type of plugin. During the normal running of Picard, when it "
"encounters a hook it will first retrieve a list of all plugins "
"registered for that specific hook, and then execute them sequentially in "
"order based upon the priority specified when the plugin was registered "
"to the hook."
msgstr ""
"Les hooks sont des connexions aux différents objets de Picard qui "
"appellent un type spécifique de plugin. Pendant le fonctionnement normal "
"de Picard, lorsqu'il rencontre un hook, il récupère d'abord une liste de "
"tous les plugins enregistrés pour ce hook spécifique, puis les exécute "
"séquentiellement dans l'ordre en fonction de la priorité spécifiée lors "
"de l'enregistrement du plugin sur le hook."

#: ../../extending/plugins.rst:24
msgid "There are a few different types of plugins, including:"
msgstr "Il existe différents types de plugins, notamment:"

#: ../../extending/plugins.rst:29
msgid ""
"**Metadata processors**: These plugins can access and modify the "
"metadata when it is loaded from MusicBrainz. They are registered with "
"``register_album_metadata_processor()`` or "
"``register_track_metadata_processor()``.  These are what you might call "
"\"automatic\" because they operate without any user intervention.  An "
"example is the Classical Extras plugin."
msgstr ""
"**Processeurs de métadonnées**: Ces plugins peuvent accéder et modifier "
"les métadonnées lors de leur chargement depuis MusicBrainz. Ils sont "
"enregistrés avec ``register_album_metadata_processor()`` ou "
"``register_track_metadata_processor()``. Ce sont ce que vous pourriez "
"appeler \"automatiques\" car ils fonctionnent sans aucune intervention "
"de l'utilisateur. Un exemple est le plugin Classical Extras."

#: ../../extending/plugins.rst:34
msgid ""
"**Cover art providers**: These plugins provide another cover art source, "
"and are registered with ``register_cover_art_provider()``. They are also "
"\"automatic\" in that they load album art without user intervention, "
"although they must be enabled by the user in the Cover Art options. The "
"Fanart.tv plugin is an example."
msgstr ""
"**Fournisseurs d'art de couverture**: Ces plugins fournissent une autre "
"source d'art de couverture et sont enregistrés avec "
"``register_cover_art_provider()``. Ils sont également \"automatiques\" "
"en ce sens qu'ils chargent la pochette d'album sans intervention de "
"l'utilisateur, bien qu'ils doivent être activés par l'utilisateur dans "
"les options de la pochette. Le plugin Fanart.tv en est un exemple."

#: ../../extending/plugins.rst:39
msgid ""
"**Scripting function**: Some plugins just provide additional scripting "
"functions for use in :menuselection:`\"Options --> Scripting\"` or the "
"renaming script. These are registered with "
"``register_script_function()``.  Keep tag, which provides the ``"
"$keep()`` function, is an example."
msgstr ""
"**Fonction de script**: Certains plugins fournissent simplement des "
"fonctions de script supplémentaires à utiliser dans :menuselection:`"
"\"Options --> Scripting\"` ou le script de renommage. Ceux-ci sont "
"enregistrés avec ``register_script_function()``. Keep tag, qui fournit "
"la fonction ``$keep()``, en est un exemple."

#: ../../extending/plugins.rst:43
msgid ""
"**Context menu actions**: Plugins can register actions that can be "
"activated manually via the context menu. This is what the Load as non-"
"album track plugin does. Another example is Generate Cuesheet.  These "
"are registered with ``register_album_action()``, "
"``register_track_action()``, ``register_file_action()``, "
"``register_cluster_action()`` or ``register_clusterlist_action()``."
msgstr ""
"**Actions du menu contextuel**: les plugins peuvent enregistrer des "
"actions qui peuvent être activées manuellement via le menu contextuel. "
"C'est ce que fait le plugin Load as non-album track. Un autre exemple "
"est Generate Cuesheet. Ceux-ci sont enregistrés avec "
"``register_album_action()``, ``register_track_action()``, "
"``register_file_action()``, ``register_cluster_action()`` ou "
"``register_clusterlist_action()``."

#: ../../extending/plugins.rst:48
msgid ""
"**File formats**: Plugins can also provide support for new file formats "
"not yet supported by Picard.  These are registered with "
"``register_format()``."
msgstr ""
"**Formats de fichiers**: les plugins peuvent également prendre en charge "
"de nouveaux formats de fichiers non encore pris en charge par Picard. "
"Ceux-ci sont enregistrés avec ``register_format()``."

#: ../../extending/plugins.rst:51
msgid ""
"**Event processors**: Plugins can execute automatically based on certain "
"event triggers. These are registered with "
"``file_post_load_processor()``, ``file_post_save_processor()``, "
"``file_post_addition_to_track_processor()``, "
"``file_post_removal_from_track_processor()`` or "
"``album_post_removal_processor()``."
msgstr ""
"**Processeurs d'événements**: les plugins peuvent s'exécuter "
"automatiquement en fonction de certains déclencheurs d'événements. Ceux-"
"ci sont enregistrés avec ``file_post_load_processor()``, "
"``file_post_save_processor()``, "
"``file_post_addition_to_track_processor()``, "
"``file_post_removal_from_track_processor()`` ou "
"``album_post_removal_processor()``."

#: ../../extending/plugins.rst:56
msgid ""
"Note that plugins are not limited to one of those areas.  A single "
"plugin could implement all of the above, but most existing plugins focus "
"on one."
msgstr ""
"Notez que les plugins ne sont pas limités à l'un de ces domaines. Un "
"seul plugin pourrait implémenter tout ce qui précède, mais la plupart "
"des plugins existants se concentrent sur un seul."

#: ../../extending/plugins.rst:59
msgid ""
"The :doc:`Plugins API <../appendices/plugins_api>` provides information "
"regarding the different plugin hooks available, along with some examples "
"of their use.  There is also a list of the `available plugins <https://"
"picard.musicbrainz.org/plugins/>`_ that have been submitted to the "
"MusicBrainz Picard repository shown on the Picard website."
msgstr ""
"L'API :doc:`Plugins API <../appendices/plugins_api>` fournit des "
"informations sur les différents plugins hooks disponibles, ainsi que "
"quelques exemples de leur utilisation. Il existe également une liste des "
"`plugins disponibles <https://picard.musicbrainz.org/plugins/>`_ qui ont "
"été soumis au référentiel MusicBrainz Picard affiché sur le site Picard."
