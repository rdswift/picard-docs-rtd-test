# SOME DESCRIPTIVE TITLE.
# Copyright (C) This documentation is licensed under CC0 1.0.
# This file is distributed under the same license as the MusicBrainz Picard
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MusicBrainz Picard v2.3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-10 14:43-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../about_picard/introduction.rst:8
msgid "Introduction"
msgstr ""

#: ../../about_picard/introduction.rst:10
msgid ""
"MusicBrainz Picard is a cross-platform music file tagger. For any people "
"who don't know what this means, here is a quick explanation which can be "
"skipped by those people who already know."
msgstr ""

#: ../../about_picard/introduction.rst:14
msgid ""
"Your music files don't just contain music. They also contain "
"\"metadata\", consisting of \"tags\" which consist of a tag name or type "
"and associated data, for example the album or track name, the name of the"
" artist, the record label, the year of issue etc. Unless you rip the "
"music files yourself with a very basic tool, your music files probably "
"already contain some basic metadata, however there are literally hundreds"
" of tags that can be applied to your music if you are interested."
msgstr ""

#: ../../about_picard/introduction.rst:20
msgid ""
"Obviously, if you wanted to you could painstakingly research all this "
"information for each album and track individually, and type the data into"
" a tagging tool, but clearly it makes more sense in this internet "
"connected age for one person to do this for each album and track, to "
"upload that data to a shared database and then for the tagging tool to "
"access that database and use the data to tag the music files. And "
"**that** is what MusicBrainz Picard does."
msgstr ""

#: ../../about_picard/introduction.rst:26
msgid ""
"**MusicBrainz** is the database, and **Picard** is the tool that tags the"
" music files."
msgstr ""

#: ../../about_picard/introduction.rst:28
msgid ""
"This User Guide is intended to augment and eventually replace the "
"information provided on the `Picard website "
"<https://picard.musicbrainz.org/>`_ and additionally to make this "
"available in alternate ebook formats, including a PDF version suitable "
"for printing. Links to additional information such as scripts, plugins "
"and tutorials are provided when available rather than trying to reproduce"
" the information in this document."
msgstr ""

#: ../../about_picard/introduction.rst:34
msgid ""
"In order to effectively use Picard, it is important to understand what "
"the program can do and, equally important, what it cannot do.  Picard is "
"primarily intended to tag and organise albums containing tracks, guided "
"by the user to the specific release of the album that they have, and then"
" to keep the metadata for these tracks up to date as users around the "
"world enhance the quality of the Musicbrainz data associated with that "
"particular release and track; Picard does this very well indeed. However,"
" it is not intended to automatically organize your collection of "
"thousands of random music files, and if this is what you are hoping for "
"then you will likely be disappointed.  To quote from the Picard website, "
"*\"Picard is not built to be a mass single-track tag fixer. Picard "
"believes in quality over quantity and provides a plethora of "
"customizations to tweak music collections to your needs.\"*"
msgstr ""

#: ../../about_picard/introduction.rst:52
msgid "Picard Can..."
msgstr ""

#: ../../about_picard/introduction.rst:54
msgid ""
"...add metadata tags to your music files, based on information available "
"from the `MusicBrainz website <https://musicbrainz.org/>`_."
msgstr ""

#: ../../about_picard/introduction.rst:57
msgid ""
"...look up the metadata either manually or automatically based on "
"existing information, including artist and song name, disc id (for CDs), "
"and a track's AcoustID fingerprint."
msgstr ""

#: ../../about_picard/introduction.rst:60
msgid "...retrieve and embed coverart images from a variety of sources."
msgstr ""

#: ../../about_picard/introduction.rst:62
msgid ""
"...rename and place the music files in directories based on naming "
"template instructions provided in a naming script."
msgstr ""

#: ../../about_picard/introduction.rst:65
msgid ""
"...calculate and submit a disc id to the MusicBrainz database, attaching "
"it to a specified release."
msgstr ""

#: ../../about_picard/introduction.rst:67
msgid ""
"...calculate and submit a music file's AcoustID fingerprint to the "
"`AcoustID database <https://acoustid.org/>`_."
msgstr ""

#: ../../about_picard/introduction.rst:71
msgid "Picard Cannot..."
msgstr ""

#: ../../about_picard/introduction.rst:73
msgid ""
"...automatically identify and remove all duplicate music files in your "
"collection."
msgstr ""

#: ../../about_picard/introduction.rst:75
msgid "...provide metadata not already existing in the MusicBrainz database."
msgstr ""

#: ../../about_picard/introduction.rst:83
msgid "Limitations"
msgstr ""

#: ../../about_picard/introduction.rst:85
msgid "**File Formats**"
msgstr ""

#: ../../about_picard/introduction.rst:87
msgid ""
"Picard currently supports most music file formats, with Matroska (.mka) "
"being one notable exception. Microsoft WAVE (.wav) files can be "
"fingerprinted and renamed and can be tagged using ID3v2 tags, but this is"
" not supported by all playback software.  In addition, Picard does not "
"support writing custom tags for all formats. The `Picard Tag Mappings "
"<https://picard.musicbrainz.org/docs/mappings/>`_ webpage provides more "
"information regarding the mapping between Picard internal tag names and "
"various tagging formats."
msgstr ""

#: ../../about_picard/introduction.rst:93
msgid "**Request Rate Limiting**"
msgstr ""

#: ../../about_picard/introduction.rst:95
msgid ""
"Picard's metadata retrieval is limited to the standard **one request per "
"second** rate limiting for the MusicBrainz API.  This becomes quite "
"noticable when trying to process a large list of files, and is "
"exacerbated by extensions that perform additional information requests "
"from the database."
msgstr ""

#: ../../about_picard/introduction.rst:99
msgid "**Network File Processing**"
msgstr ""

#: ../../about_picard/introduction.rst:101
msgid ""
"Sometimes Picard needs to rewrite the entire music file in order to add "
"or update the tags.  This can take a few seconds, and the delay becomes "
"even longer if the file is accessed across a network (e.g.: file is read "
"from or written to a NAS device).  The recommended \"best practice\" is "
"to process all files on a local drive and then move them to the desired "
"remote directory once processing is complete."
msgstr ""

